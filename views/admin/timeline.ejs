<% include ../head.ejs %>

<div class="container">
    <div id="visualization"></div>
</div>

<link href="/components/vis/dist/vis-timeline-graph2d.min.css" rel="stylesheet">
<script src="/components/vis/dist/vis-timeline-graph2d.min.js"></script>

<link href="/components/sweetalert/dist/sweetalert.css" rel="stylesheet">
<script src="/components/sweetalert/dist/sweetalert.min.js"></script>

<script>

    const groupsInput = JSON.parse('<%- JSON.stringify(groups) %>');
    const itemsInput = JSON.parse('<%- JSON.stringify(items) %>');

    const groups = new vis.DataSet(groupsInput);
    const items = new vis.DataSet(itemsInput);

    const container = document.getElementById('visualization');
    const options = {
        groupOrder: 'content', // groupOrder can be a property name or a sorting function
        editable: true,
        onAdd: function (item, callback) {

            prettyPrompt('Add item', 'Enter text content for new item:', item.content, function (value) {
                if (value) {
                    item.content = value;

                    //TODO update backend
                    $.post('/api/events/add', item)
                        .then(data => {
                            item.eventID = data.id;
                            callback(item); // send back adjusted new item
                        })
                        .catch(err => {
                            prettyError("Failed to save", err);
                            callback(null);
                        });
                } else {
                    callback(null); // cancel item creation
                }
            });
        },

        onMove: function (item, callback) {
            const title = 'Do you really want to move the item to\n' +
                'start: ' + item.start + '\n' +
                'end: ' + item.end + '?';

            prettyConfirm('Move item', title, function (ok) {
                if (ok) {
                    //TODO update backend
                    $.post('/api/events/move', item)
                        .then(() => {
                            callback(item); // send back item as confirmation (can be changed)
                        })
                        .catch(err => {
                            prettyError("Failed to save", err);
                            callback(null);
                        });
                } else {
                    callback(null); // cancel editing item
                }
            });
        },

        onUpdate: function (item, callback) {
            prettyPrompt('Update item', 'Edit items text:', item.content, function (value) {
                if (value) {
                    item.content = value;

                    //TODO update backend
                    $.post('/api/events/update', item)
                        .then(() => {
                            callback(item); // send back adjusted item
                        })
                        .catch(err => {
                            prettyError("Failed to save", err);
                            callback(null);
                        });
                } else {
                    callback(null); // cancel updating the item
                }
            });
        },

        onRemove: function (item, callback) {
            prettyConfirm('Remove item', 'Do you really want to remove item ' + item.content + '?', function (ok) {
                if (ok) {

                    //TODO update backend
                    $.post('/api/events/delete', item)
                        .then(() => {
                            callback(item); // confirm deletion
                        })
                        .catch(err => {
                            prettyError("Failed to save", err);
                            callback(null);
                        });
                } else {
                    callback(null); // cancel deletion
                }
            });
        }

    };
    const timeline = new vis.Timeline(container);
    timeline.setOptions(options);
    timeline.setGroups(groups);
    timeline.setItems(items);

    function prettyConfirm(title, text, callback) {
        swal({
            title: title,
            text: text,
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: "#FB5F4B"
        }, callback);
    }

    function prettyPrompt(title, text, inputValue, callback) {
        swal({
            title: title,
            text: text,
            type: 'input',
            showCancelButton: true,
            inputValue: inputValue
        }, callback);
    }
    function prettyError(title, text, callback) {
//        swal({
//            title: title,
//            text: text,
//            type: 'error',
//        }, callback);
    }

    //TODO on move item, move all items to the right in sync
</script>

<% include ../foot.ejs %>